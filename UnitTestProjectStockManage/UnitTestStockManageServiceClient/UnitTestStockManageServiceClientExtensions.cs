// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace UnitTestStockManageService
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;

    /// <summary>
    /// Extension methods for UnitTestStockManageServiceClient.
    /// </summary>
    public static partial class UnitTestStockManageServiceClientExtensions
    {
            /// <summary>
            /// Get the Saldo in the Stock
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static int? GetSaldo(this IUnitTestStockManageServiceClient operations)
            {
                return Task.Factory.StartNew(s => ((IUnitTestStockManageServiceClient)s).GetSaldoAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Saldo in the Stock
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<int?> GetSaldoAsync(this IUnitTestStockManageServiceClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSaldoWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Make a saldo movment in the Stock
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// the value should be an int and for buying should be + value and - when
            /// selling.
            /// </param>
            public static void UpdateSaldo(this IUnitTestStockManageServiceClient operations, int value)
            {
                Task.Factory.StartNew(s => ((IUnitTestStockManageServiceClient)s).UpdateSaldoAsync(value), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Make a saldo movment in the Stock
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// the value should be an int and for buying should be + value and - when
            /// selling.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateSaldoAsync(this IUnitTestStockManageServiceClient operations, int value, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UpdateSaldoWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
